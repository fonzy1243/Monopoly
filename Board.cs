namespace Minipoly;

public class Board
{
    public char[,] GameBoard =
    {   //0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20   21   22   23   24   25   26   27
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', 'e', ' ', ' ', ' ', 'f', ' ', ' ', ' ', 'g', ' ', ' ', ' ', 'h', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '\n'},   // 0
        {' ', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', ' ', '\n'},   // 1
        {' ', '|', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', ' ', '\n'},   // 2
        {' ', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', ' ', '\n'},   // 3
        {'d', '|', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', 'i', '\n'},   // 4
        {' ', '+', '-', '-', '-', '+', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '+', '-', '-', '-', '+', ' ', '\n'},   // 5
        {'c', '|', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', 'j', '\n'},   // 6
        {' ', '+', '-', '-', '-', '+', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '+', '-', '-', '-', '+', ' ', '\n'},   // 7
        {'b', '|', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', 'k', '\n'},   // 8
        {' ', '+', '-', '-', '-', '+', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '+', '-', '-', '-', '+', ' ', '\n'},   // 9
        {'a', '|', ' ', ' ', ' ', '|', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', 'l', '\n'},   // 10
        {' ', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', ' ', '\n'},   // 11
        {' ', '|', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', ' ', ' ', ' ', '|', ' ', '\n'},   // 12
        {' ', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', '-', '-', '-', '+', ' ', '\n'},   // 13
        {' ', ' ', ' ', ' ', ' ', ' ', ' ', 'o', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'n', ' ', ' ', ' ', 'm', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '\n'},   // 14
    };

    
    public void PrintBoard(Player player1, Player player2)
    {
        Console.Clear();

        if (player1.PlayerPos == player2.PlayerPos)
        {
            player1.PlayerToken = player2.PlayerToken = '3';
        }
        else
        {
            player1.PlayerToken = '1';
            player2.PlayerToken = '2';
        }

        switch (player1.PlayerPos)
        {
            case 0:
                GameBoard[12, 3] = player1.PlayerToken;
                break;
            case 1:
                GameBoard[10, 3] = player1.PlayerToken;
                break;
        }

        switch (player2.PlayerPos)
        {
            case 0:
                GameBoard[12, 3] = player2.PlayerToken;
                break;
            case 1:
                GameBoard[10, 3] = player2.PlayerToken;
                break;
        }
        
        foreach (var i in GameBoard)
        {
            // ReSharper disable once HeapView.BoxingAllocation (code as recommended by Microsoft)
            Console.Write("{0}", i);
        }
        Console.WriteLine("\nAccount Balance: \nPlayer 1: {0:N}", player1.PlayerCash);
        Console.WriteLine("Player 2: {0:N}",player2.PlayerCash);
    }
    
}